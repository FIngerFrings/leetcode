/*
 * 给定一个整数，写一个函数来判断它是否是 4 的幂次方。如果是，返回 true ；否则，返回 false 。
 * 整数 n 是 4 的幂次方需满足：存在整数 x 使得 n == 4x
 */
//方法一：模运算和除运算
//思路：略
class Solution {
public:
    bool isPowerOfFour(int n) {
        if(n <= 0)  return false;
        while(n % 4 == 0){
            n /= 4;
        }
        return n == 1;
    }
};

//方法二：位运算
//思路：如果一个数是4的幂，则一定也是2的幂，我们可以发现，如果一个数是2的幂，则它的二进制表示法一定只有1个1
//如果一个数是4的幂，则它的二进制表示法一定也只有1个1，则这个1在奇数位上
//所以我们可以先判断一个数是否是2的幂，如果n & (n-1)=0则说明这个数是2的幂
//之后再将n与1431655765（1010101010101010101010101010101）按位与，结果不为0说明是4的幂
class Solution {
public:
    bool isPowerOfFour(int n) {
        return n > 0 && (n & 1431655765) && !(n & (n - 1));
    }
};

//方法三：取模性质
//思路：如果1个数是4的幂，则它模3结果一定是1，如果一个数是2的幂但不是4的幂，则它模3的结果一定是2
class Solution {
public:
    bool isPowerOfFour(int n) {
        return n > 0 && (n % 3 == 1) && !(n & (n - 1));
    }
};
